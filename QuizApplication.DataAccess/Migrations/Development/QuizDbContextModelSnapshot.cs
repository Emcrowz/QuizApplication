// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizApplication.DataAccess.Context;

#nullable disable

namespace QuizApplication.DataAccess.Migrations.Development
{
    [DbContext(typeof(QuizDbContext))]
    partial class QuizDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("QuizApplication.DataAccess.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ParticipationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Participants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Jane.Doe@mail.com",
                            Name = "Jane Doe",
                            ParticipationDate = new DateTime(2023, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 2
                        },
                        new
                        {
                            Id = 2,
                            Email = "John.Doe@mail.com",
                            Name = "John Doe",
                            ParticipationDate = new DateTime(2024, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 10
                        },
                        new
                        {
                            Id = 3,
                            Email = "Jane.Doe@mail.com",
                            Name = "Jane Doe",
                            ParticipationDate = new DateTime(2021, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 8
                        },
                        new
                        {
                            Id = 4,
                            Email = "John.Doe@mail.com",
                            Name = "John Doe",
                            ParticipationDate = new DateTime(2022, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 7
                        },
                        new
                        {
                            Id = 5,
                            Email = "Jane.Doe@mail.com",
                            Name = "Jane Doe",
                            ParticipationDate = new DateTime(2022, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 4
                        },
                        new
                        {
                            Id = 6,
                            Email = "Jane.Doe@mail.com",
                            Name = "Jane Doe",
                            ParticipationDate = new DateTime(2022, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 0
                        },
                        new
                        {
                            Id = 7,
                            Email = "Jane.Doe@mail.com",
                            Name = "Jane Doe",
                            ParticipationDate = new DateTime(2022, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 1
                        },
                        new
                        {
                            Id = 8,
                            Email = "Jane.Doe@mail.com",
                            Name = "Jane Doe",
                            ParticipationDate = new DateTime(2021, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 1
                        },
                        new
                        {
                            Id = 9,
                            Email = "Jane.Doe@mail.com",
                            Name = "Jane Doe",
                            ParticipationDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 0
                        },
                        new
                        {
                            Id = 10,
                            Email = "Jane.Doe@mail.com",
                            Name = "Jane Doe",
                            ParticipationDate = new DateTime(2021, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 8
                        },
                        new
                        {
                            Id = 11,
                            Email = "Jane.Doe@mail.com",
                            Name = "Jane Doe",
                            ParticipationDate = new DateTime(2024, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 3
                        },
                        new
                        {
                            Id = 12,
                            Email = "Jane.Doe@mail.com",
                            Name = "Jane Doe",
                            ParticipationDate = new DateTime(2023, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 0
                        });
                });

            modelBuilder.Entity("QuizApplication.DataAccess.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("Choises")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("CorrectOptions")
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Choises = "[\"Option 1\",\"Option 2\",\"Option 3\",\"Option 4\"]",
                            CorrectOptions = "[\"Option 2\"]",
                            Points = 1,
                            Title = "Question 1",
                            Type = (byte)1
                        },
                        new
                        {
                            Id = 2,
                            Choises = "[\"Option 1\",\"Option 2\",\"Option 3\",\"Option 4\"]",
                            CorrectOptions = "[\"Option 1\",\"Option 3\"]",
                            Points = 1,
                            Title = "Question 2",
                            Type = (byte)2
                        },
                        new
                        {
                            Id = 3,
                            Choises = "[\"Option 1\",\"Option 2\",\"Option 3\",\"Option 4\"]",
                            CorrectOptions = "[\"Option 4\"]",
                            Points = 1,
                            Title = "Question 3",
                            Type = (byte)1
                        },
                        new
                        {
                            Id = 4,
                            Choises = "[]",
                            CorrectOptions = "[\"Written Answer\"]",
                            Points = 1,
                            Title = "Question 4",
                            Type = (byte)0
                        },
                        new
                        {
                            Id = 5,
                            Choises = "[\"Option 1\",\"Option 2\",\"Option 3\",\"Option 4\"]",
                            CorrectOptions = "[\"Option 1\",\"Option 2\",\"Option 4\"]",
                            Points = 1,
                            Title = "Question 5",
                            Type = (byte)2
                        },
                        new
                        {
                            Id = 6,
                            Choises = "[]",
                            CorrectOptions = "[\"Another Custom\"]",
                            Points = 1,
                            Title = "Question 6",
                            Type = (byte)0
                        },
                        new
                        {
                            Id = 7,
                            Choises = "[\"Option 1\",\"Option 2\",\"Option 3\",\"Option 4\"]",
                            CorrectOptions = "[\"Option 4\"]",
                            Points = 1,
                            Title = "Question 7",
                            Type = (byte)1
                        },
                        new
                        {
                            Id = 8,
                            Choises = "[]",
                            CorrectOptions = "[\"Custom\"]",
                            Points = 1,
                            Title = "Question 8",
                            Type = (byte)0
                        },
                        new
                        {
                            Id = 9,
                            Choises = "[\"Option 1\",\"Option 2\",\"Option 3\",\"Option 4\"]",
                            CorrectOptions = "[\"Option 2\",\"Option 3\"]",
                            Points = 1,
                            Title = "Question 9",
                            Type = (byte)2
                        },
                        new
                        {
                            Id = 10,
                            Choises = "[\"Option 1\",\"Option 2\",\"Option 3\",\"Option 4\"]",
                            CorrectOptions = "[\"Option 1\",\"Option 4\"]",
                            Points = 1,
                            Title = "Question 10",
                            Type = (byte)2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
